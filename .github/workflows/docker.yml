name: Build and Publish container (multi-platform)

on:
  workflow_dispatch:
    inputs:
      publish:
        description: 'Publish to ghcr?'
        required: false
        default: 'false'
      specific-version:
        description: 'Publish tag with specific version? (from .env)'
        required: true
        default: 'true'
      latest-version:
        description: 'Publish tag "latest"?'
        required: true
        default: 'false'

env:
  IMAGE_ID: ghcr.io/axlabs/neo3-privatenet-docker/neo-cli-with-plugins
  VERSION_LATEST: latest

jobs:

  build-neo-cli-with-plugins:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Load .env
        id: loadenv
        uses: ./.github/actions/load-env

      - name: Build and push neo-cli-with-plugins
        id: build-plugins-image
        uses: docker/build-push-action@v5
        with:
          platforms: ${{ matrix.platform }}
          file: ./docker/Dockerfile.neo-node-with-plugins
          target: NeoCliFinal
          build-args: IMAGE_TAG=${{ steps.loadenv.outputs.image-tag }}
          context: ./
          outputs: type=image,name=${{ env.IMAGE_ID }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest - neo-cli-with-plugins
        run: |
          mkdir -p /tmp/digests-plugins-image
          digest="${{ steps.build-plugins-image.outputs.digest }}"
          touch "/tmp/digests-plugins-image/${digest#sha256:}"

      - name: Upload digest - neo-cli-with-plugins
        uses: actions/upload-artifact@v4
        with:
          name: digests-plugins-image-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests-plugins-image/*
          if-no-files-found: error
          retention-days: 1

  merge-neo-cli-with-plugins:
    runs-on: ubuntu-latest
    needs:
      - build-neo-cli-with-plugins
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Load .env
        id: loadenv
        uses: ./.github/actions/load-env

      - name: Download digests - neo-cli-with-plugins
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests-plugins-image
          pattern: digests-plugins-image-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push - neo-cli-with-plugins
        working-directory: /tmp/digests-plugins-image
        run: |
          docker buildx imagetools create -t ${{ env.IMAGE_ID }}:${{ steps.loadenv.outputs.image-tag }} \
            $(printf '${{ env.IMAGE_ID }}@sha256:%s ' *)

      - name: Inspect image - neo-cli-with-plugins
        run: |
          docker buildx imagetools inspect ${{ env.IMAGE_ID }}:${{ steps.loadenv.outputs.image-tag }}
